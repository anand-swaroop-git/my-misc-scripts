{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "XXXX Public Website Stage Stack with Encrypted EBS, RDS and EFS (Automount). Note - https://docs.aws.amazon.com/autoscaling/ec2/userguide/key-policy-requirements-EBS-encryption.html while using KMS encryption keys",
    "Parameters" : {
		"EnvironmentName": {
			"Default": "XXXX-Stage-Stack",
			"Description": "XXXX Stage Stack",
			"Type": "String"
		},
		"EnvironmentTag": {
			"Default": "Stage",
			"Description": "user:Environment tag to be applied to all created objects",
			"Type": "String"
		},
		"ApplicationTag": {
			"Default": "DeptOpex-NonProd",
			"Description": "user:Application tag to be applied to all created objects",
			"Type": "String"
		},
		"DeptCodeTag": {
			"Default": "730508",
			"Description": "user:DeptCode tag to be applied to all created objects",
			"Type": "String"
		},
        "USW2a" : {
            "Description" : "us-west-2a Availability Zone",
            "Type"        : "String",
            "Default"     : "us-west-2a",
            "ConstraintDescription" : "must be a valid EC2 Availability Zone"
        },
        "USW2b" : {
            "Description" : "us-west-2b Availability Zone",
            "Type"        : "String",
            "Default"     : "us-west-2b",
            "ConstraintDescription" : "must be a valid EC2 Availability Zone"
        },
        "USW2c" : {
            "Description" : "us-west-2c Availability zone",
            "Type"        : "String",
            "Default"     : "us-west-2c",
            "ConstraintDescription" : "must be a valid EC2 Availability Zone"
        },
        "StagePrivateKeyName" : {
            "Description" : "Key file used for XXXX Stage servers",
            "Default"     : "www-XXXX-key",
            "Type"        : "String"
        },
        "StageFrontendAMI" : {
            "Description" : "AMI imported from Root Account XXXX Stage instance",
            "Default"     : "ami-0a3511dcff209c35e",
            "Type"        : "String"
        },
        "StageFrontendInstanceType" : {
            "Description" : "Web/App Server Size",
            "Default"     : "t2.medium",
            "Type"        : "String"
        },
        "VPC" : {
            "Description" : "EP-WordPress-VPC",
            "Type" : "String",
	        "Default" : "vpc-f73e7asffc90"
        },
		"DMZSubnet2a" : {
		  "Description" : "DMZ Subnet 2a",
		  "Type" : "String",
		  "Default" : "subnetID-anything8b7eccc2"
		},
		"DMZSubnet2b" : {
		  "Description" : "DMZ Subnet 2b",
		  "Type" : "String",
		  "Default" : "subnetID-anything635ec604"
		},
		"DMZSubnet2c" : {
		  "Description" : "DMZ Subnet 2c",
		  "Type" : "String",
		  "Default" : "subnetID-anything872730df"
		},
		"ProcSubnet2a" : {
		  "Description" : "Proc Subnet 2a",
		  "Type" : "String",
		  "Default" : "subnetID-anything5678ca1f"
		},
		"ProcSubnet2b" : {
		  "Description" : "Proc Subnet 2b",
		  "Type" : "String",
		  "Default" : "subnetID-anything6651c901"
		},
		"ProcSubnet2c" : {
		  "Description" : "Proc Subnet 2c",
		  "Type" : "String",
		  "Default" : "subnetID-anythinga63e29fe"
		},
		"DataSubnet2a" : {
		  "Description" : "Data Subnet 2a",
		  "Type" : "String",
		  "Default" : "subnetID-anything887fcdc1"
		},
		"DataSubnet2b" : {
		  "Description" : "Data Subnet 2b",
		  "Type" : "String",
		  "Default" : "subnetID-anything6c55cd0b"
		},
		"DataSubnet2c" : {
		  "Description" : "Data Subnet 2c",
		  "Type" : "String",
		  "Default" : "subnetID-anything862730de"
		},
		"StageDBUsername": {
		  "Default": "XXXX",
		  "Description" : "Stage database admin account username",
		  "Type": "String"
		},
		"StageDBPassword": {
		  "Default": "XXXXX",
		  "NoEcho": "true",
		  "Description" : "Stage database admin account password",
		  "Type": "String"
		},
		"StageDBClass" : {
		  "Default" : "db.t2.medium",
		  "Description" : "Stage database instance class",
		  "Type" : "String"
		},
		"StageDBEngine" : {
		  "Default" : "mysql",
		  "Description" : "Database Engine",
		  "Type" : "String"
		},
		"StageDBAllocatedStorage" : {
		  "Default": "10",
		  "Description" : "The size of the database (Gb)",
		  "Type": "Number",
		  "MinValue": "5",
		  "MaxValue": "6144",
		  "ConstraintDescription" : "must be between 5 and 6144Gb."
		},
		"MultiAZDatabase": {
		  "Default": "true",
		  "Description" : "False for single instance or True for Multi-AZ instances",
		  "Type": "String",
		  "AllowedValues" : [ "true", "false" ],
		  "ConstraintDescription" : "must be either true or false."
		},
		"LogS3BucketName" : {
		  "Description" : "Name of S3 Log Bucket",
		  "Type" : "String",
		  "Default" : "XXXX-stage-logs"
 		}		
    },
    "Resources" : {
		"StageFrontendSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Stage Frontend Security Group",
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "172.16.0.0/12",
                        "FromPort": "22",
                        "ToPort": "22"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": "172.16.0.0/12",
                        "FromPort": "80",
                        "ToPort": "80"
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "172.16.0.0/12"
                    }
                ],
				"Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Ref" : "EnvironmentName"
                                    },
                                    "-Frontend-SG"
                                ]
                            ]
                        }
                    },
					{
                        "Key" : "user:Environment",
                        "Value" : {
                                        "Ref" : "EnvironmentTag"
                                  }
					},
					{
                        "Key" : "user:Application",
                        "Value" : {
                                        "Ref" : "ApplicationTag"
                                  }
					},
					{
                        "Key" : "user:DeptCode",
                        "Value" : {
                                        "Ref" : "DeptCodeTag"
                                  }
					}
                ]
            }
        },
        "StageFrontendSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": { "Ref": "StageFrontendSG" },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "SourceSecurityGroupId": { "Ref": "StageFrontendELBSG" }
            }
        },
		"StageFrontendELBSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Stage Frontend ELB Security Group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
				    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
				    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
				"Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Ref" : "EnvironmentName"
                                    },
                                    "-Frontend-ELB-SG"
                                ]
                            ]
                        }
                    },
					{
                        "Key" : "user:Environment",
                        "Value" : {
                                        "Ref" : "EnvironmentTag"
                                  }
					},
					{
                        "Key" : "user:Application",
                        "Value" : {
                                        "Ref" : "ApplicationTag"
                                  }
					},
					{
                        "Key" : "user:DeptCode",
                        "Value" : {
                                        "Ref" : "DeptCodeTag"
                                  }
					}
                ]
            }
        },
		"StageDatabaseSG" : {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Stage Database Security Group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
				    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": "172.16.0.0/12"
                    }
                ],
				"Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Ref" : "EnvironmentName"
                                    },
                                    "-Stage-Database-SG"
                                ]
                            ]
                        }
                    },
					{
                        "Key" : "user:Environment",
                        "Value" : {
                                        "Ref" : "EnvironmentTag"
                                  }
					},
					{
                        "Key" : "user:Application",
                        "Value" : {
                                        "Ref" : "ApplicationTag"
                                  }
					},
					{
                        "Key" : "user:DeptCode",
                        "Value" : {
                                        "Ref" : "DeptCodeTag"
                                  }
					}
                ]
            }
        },
        "StageDatabaseSGIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": { "Ref": "StageDatabaseSG" },
                "IpProtocol": "tcp",
                "FromPort": "3306",
                "ToPort": "3306",
                "SourceSecurityGroupId": { "Ref": "StageFrontendSG" }
            }
        },
		"StageS3LogBucket" : {
			"Type" : "AWS::S3::Bucket",
			  "Properties" : {
				    "BucketName" : { "Ref" : "LogS3BucketName" },
				    "Tags" : [
                    {
                        "Key" : "user:Environment",
                        "Value" : { "Ref" : "EnvironmentTag" }
					},
					{
                        "Key" : "user:Application",
                        "Value" : { "Ref" : "ApplicationTag" }
					},
					{
                        "Key" : "user:DeptCode",
                        "Value" : { "Ref" : "DeptCodeTag" }
					}
                ]
			  }},
		"StageS3LogBucketPolicy" : {
			"Type" : "AWS::S3::BucketPolicy",
			"Properties" : {
				"Bucket" : {"Ref": "StageS3LogBucket" },
				"PolicyDocument": {
					"Statement": [{
						"Action": [ "s3:PutObject" ],
						"Effect": "Allow",
						"Resource": { "Fn::Join" : ["", ["arn:aws:s3:::",
														 { "Ref" : "LogS3BucketName" } ,
														 "/*" ]]},
						"Principal": { "AWS" : [ "797873946194" ] } 
					}]
				}
			}
		},
		"StageFrontendASG" : {
		  "Type" : "AWS::AutoScaling::AutoScalingGroup",
		  "Properties" : {
			"AvailabilityZones" : [ {"Ref" : "USW2a"},{"Ref" : "USW2b"},{"Ref" : "USW2c"}],
			"VPCZoneIdentifier" : [ {"Ref" : "ProcSubnet2a"},{"Ref" : "ProcSubnet2b"},{"Ref" : "ProcSubnet2c"}],
			"LaunchConfigurationName" : { "Ref" : "StageFrontendLC" },
			"MinSize" : "1",
			"MaxSize" : "1",
			"DesiredCapacity" : "1",
			"LoadBalancerNames" : [ { "Ref" : "StageFrontendELB" } ],
			"Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : {
                            "Fn::Join" : [
                                "",
                                [
                                    {
                                        "Ref" : "EnvironmentName"
                                    },
                                    "-StageFrontendASG"
                                ]
                            ]
                        },
						"PropagateAtLaunch" : true
                    },
					{
                        "Key" : "user:Environment",
                        "Value" : {
                                        "Ref" : "EnvironmentTag"
                                  },
						"PropagateAtLaunch" : true
					},
					{
                        "Key" : "user:Application",
                        "Value" : {
                                        "Ref" : "ApplicationTag"
                                  },
						"PropagateAtLaunch" : true
					},
					{
                        "Key" : "user:DeptCode",
                        "Value" : {
                                        "Ref" : "DeptCodeTag"
                                  },
						"PropagateAtLaunch" : true
					}
                ]
		  }
		},
		"StageFrontendLC" : {
		  "Type" : "AWS::AutoScaling::LaunchConfiguration",
		  "Properties" : {
		    "KeyName"  : { "Ref" : "StagePrivateKeyName" },
			"ImageId"  : { "Ref" : "StageFrontendAMI" },
			"SecurityGroups" : [ { "Ref" : "StageFrontendSG" } ],
			"InstanceType" : { "Ref" : "StageFrontendInstanceType" },
            "IamInstanceProfile" : { "Ref" : "StageFrontendProfile" },
            "UserData": {
                "Fn::Base64": {
                    "Fn::Join": [
                        "",
                        [
                            "#!/bin/bash -x\n",
                            "export LC_CTYPE=en_US.UTF-8\n",
                            "export LC_ALL=en_US.UTF-8\n",
                            "yum update\n",
                            "yum install -y curl nfs-common\n",
                            "EC2_REGION=",
                            {
                                    "Ref": "AWS::Region"
                            },
                            "\n",
                            "DIR_TGT=/var/www/html/ep-wordpress-master-8fc58fd8dfa8ec9f5d864389b6e796844164e698/wp-content/uploads",
                            "\n",
                            "EFS_FILE_SYSTEM_ID=",
                            {
                                "Ref" : "EFSFileSystem"
                            },
                            "\n",
                            "mkdir -p $DIR_TGT\n",
                            "DIR_SRC=$EFS_FILE_SYSTEM_ID.efs.$EC2_REGION.amazonaws.com\n",
                            "mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 $DIR_SRC:/ $DIR_TGT\n",
                            "echo -e \"$DIR_SRC:/ $DIR_TGT nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev 0 0\" >> /etc/fstab"
                        ]
                    ]
                }
            }
		  }
		},
  		"StageFrontendScaleUpPolicy" : {
		  "Type" : "AWS::AutoScaling::ScalingPolicy",
		  "Properties" : {
			"AdjustmentType" : "ChangeInCapacity",
			"AutoScalingGroupName" : { "Ref" : "StageFrontendASG" },
			"Cooldown" : "60",
			"ScalingAdjustment" : "1"
		  }
		},
		"StageFrontendScaleDownPolicy" : {
		  "Type" : "AWS::AutoScaling::ScalingPolicy",
		  "Properties" : {
			"AdjustmentType" : "ChangeInCapacity",
			"AutoScalingGroupName" : { "Ref" : "StageFrontendASG" },
			"Cooldown" : "60",
			"ScalingAdjustment" : "-1"
		  }
		},
		"StageFrontendCPUAlarmHigh": {
		 "Type": "AWS::CloudWatch::Alarm",
		 "Properties": {
			"AlarmDescription": "Scale-up if CPU > 70% for 5 minutes",
			"MetricName": "CPUUtilization",
			"Namespace": "AWS/EC2",
			"Statistic": "Average",
			"Period": "300",
			"EvaluationPeriods": "2",
			"Threshold": "50",
			"AlarmActions": [ { "Ref": "StageFrontendScaleUpPolicy" } ],
			"Dimensions": [
			  {
				"Name": "AutoScalingGroupName",
				"Value": { "Ref": "StageFrontendASG" }
			  }
			],
			"ComparisonOperator": "GreaterThanThreshold"
		  }
		},
		"StageFrontendCPUAlarmLow": {
		 "Type": "AWS::CloudWatch::Alarm",
		 "Properties": {
			"AlarmDescription": "Scale-down if CPU < 25% for 10 minutes",
			"MetricName": "CPUUtilization",
			"Namespace": "AWS/EC2",
			"Statistic": "Average",
			"Period": "300",
			"EvaluationPeriods": "2",
			"Threshold": "25",
			"AlarmActions": [ { "Ref": "StageFrontendScaleDownPolicy" } ],
			"Dimensions": [
			  {
				"Name": "AutoScalingGroupName",
				"Value": { "Ref": "StageFrontendASG" }
			  }
			],
			"ComparisonOperator": "LessThanThreshold"
		  }
		},
  	    "StageFrontendRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [ "ec2.amazonaws.com" ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                },
                "Path": "/",
                "Policies": [ {
                    "PolicyName": "XXXXStageFrontendPolicy",
                    "PolicyDocument": {
                        "Statement": [ {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:*",
								"s3:*"
                            ],
                            "Resource": "*"
                        } ]
                    }
                } ]
            }
        },
        "StageFrontendProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
				"InstanceProfileName": {
					"Fn::Join" : [ "",
								   [
									   {
										   "Ref" : "EnvironmentName"
									   },
									   "-Frontend-InstanceProfile"
								   ]
								 ]
				},
                "Path": "/",
                "Roles": [ {
                    "Ref": "StageFrontendRole"
                } ]
            }
        },
        "StageFrontendELB": {
			"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
			"DependsOn" : "StageS3LogBucketPolicy",
            "Properties": {
                "SecurityGroups": [
                    { "Ref": "StageFrontendELBSG" }
                ],
                "Subnets": [
                        {"Ref": "DMZSubnet2a"},{"Ref": "DMZSubnet2b"},{"Ref": "DMZSubnet2c"}
                ],
				"LBCookieStickinessPolicy" : [
					{
						"PolicyName" : "Sticky",
						"CookieExpirationPeriod" : "3600"
					}
				],
                "Listeners": [
                   {
                        "InstancePort": "80",
						"InstanceProtocol": "HTTP",
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTP",
                        "PolicyNames": [ "Sticky" ]
                    }
                ],
                "HealthCheck": {
                    "HealthyThreshold": "2",
                    "Interval": "12",
                    "Target": "TCP:80",
                    "Timeout": "10",
                    "UnhealthyThreshold": "2"
                },
				"AccessLoggingPolicy": {
					"EmitInterval" : 5,
					"Enabled" : "True",
					"S3BucketName" : { "Ref" : "LogS3BucketName" }
				},
		        "Scheme" : "internal",
				"Tags" : [
						{
							"Key" : "Name",
							"Value" : {
								"Fn::Join" : [
									"",
									[
										{
											"Ref" : "EnvironmentName"
										},
										"-StageFrontendELB"
									]
								]
							}
						},
					{
                        "Key" : "user:Environment",
                        "Value" : {
                                        "Ref" : "EnvironmentTag"
                                  }
					},
					{
                        "Key" : "user:Application",
                        "Value" : {
                                        "Ref" : "ApplicationTag"
                                  }
					},
					{
                        "Key" : "user:DeptCode",
                        "Value" : {
                                        "Ref" : "DeptCodeTag"
                                  }
					}
					]
				}
        },
		"StageDBSubGrp" : {
		  "Type" : "AWS::RDS::DBSubnetGroup",
		  "Properties" : {
			"DBSubnetGroupDescription" : "RDS Subnet Group",
			"SubnetIds" : [
							{"Ref": "DataSubnet2a"},
							{"Ref": "DataSubnet2b"},
							{"Ref": "DataSubnet2c"}
					]
		  }
		},
		"StageDBRDS" : {
		  "Type" : "AWS::RDS::DBInstance",
		  "Properties" : {
			"AllocatedStorage" : { "Ref" : "StageDBAllocatedStorage" },
            "CopyTagsToSnapshot" : "True",
            "StorageEncrypted" : "True",
            "KmsKeyId" : "ARN of the KMS key Id and the key should be present in the same region",
			"StorageType" : "gp2",
			"DBName" : "XXXXStageDatabase",
			"DBInstanceIdentifier" : "XXXXStageDatabase",
			"DBInstanceClass" : { "Ref" : "StageDBClass" },
			"Engine" : { "Ref" : "StageDBEngine" },
			"LicenseModel" : "general-public-license",
			"MasterUsername" : { "Ref" : "StageDBUsername" } ,
			"MasterUserPassword" : { "Ref" : "StageDBPassword" },
			"DBSubnetGroupName" : { "Ref" : "StageDBSubGrp" },
			"MultiAZ" : { "Ref" : "MultiAZDatabase" },
			"VPCSecurityGroups" : [ { "Ref" : "StageDatabaseSG" } ]
		  }
        },
        "EFSFileSystem": {
			"Type" : "AWS::EFS::FileSystem",
			"Properties" : {
                "PerformanceMode" : "generalPurpose",
                "Encrypted" : "True",
                "KmsKeyId" : "ARN of the KMS key and the key should be in the same region",
                "FileSystemTags" : [{
					"Key" : "Name",
					"Value" : {"Ref": "AWS::StackName"}
				}]
			}
		},

		"EFSMountTarget1": {
			"Type" : "AWS::EFS::MountTarget",
			"Properties" : {
				"FileSystemId" : { "Ref": "EFSFileSystem" },
				"SecurityGroups": [{"Ref": "EFSSecurityGroup"}],
				"SubnetId" : { "Ref": "ProcSubnet2a" }
			}
		},

		"EFSMountTarget2": {
			"Type" : "AWS::EFS::MountTarget",
			"Properties" : {
				"FileSystemId" : { "Ref": "EFSFileSystem" },
				"SecurityGroups": [{"Ref": "EFSSecurityGroup"}],
				"SubnetId" : { "Ref": "ProcSubnet2b" }
			}
		},

		"EFSMountTarget3": {
			"Type" : "AWS::EFS::MountTarget",
			"Properties" : {
				"FileSystemId" : { "Ref": "EFSFileSystem" },
				"SecurityGroups": [{"Ref": "EFSSecurityGroup"}],
				"SubnetId" : { "Ref": "ProcSubnet2c" }
			}
        },
        "EFSSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Allowing access to EFS",
				"VpcId": {"Ref": "VPC"},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": 2049,
					"ToPort": 2049,
					"SourceSecurityGroupId": {"Ref": "StageFrontendSG"}
				}]
			}
		}
    },
    "Outputs" : {
		"StageFrontendSGOut" : {
            "Description" : "Security Group for instances in a private subnet.",
            "Value" : {
                "Ref" : "StageFrontendSG"
            }
        },
		"JDBCConnectionStringOut": {
			  "Description" : "JDBC connection string for database",
			  "Value" : { "Fn::Join": [ "", [ "jdbc:mysql://",
							{ "Fn::GetAtt": [ "StageDBRDS", "Endpoint.Address" ] },
							":",
							{ "Fn::GetAtt": [ "StageDBRDS", "Endpoint.Port" ] },
							"/"
			  ]]}
		},
		"DMZSubnet2aOut" : {
            "Description" : "DMZ Subnet 2a",
            "Value" : {
                "Ref" : "DMZSubnet2a"
            }
        },
		"DMZSubnet2bOut" : {
            "Description" : "DMZ Subnet 2b",
            "Value" : {
                "Ref" : "DMZSubnet2b"
            }
        },
		"DMZSubnet2cOut" : {
            "Description" : "DMZ Subnet 2c",
            "Value" : {
                "Ref" : "DMZSubnet2c"
            }
        }
    }
}